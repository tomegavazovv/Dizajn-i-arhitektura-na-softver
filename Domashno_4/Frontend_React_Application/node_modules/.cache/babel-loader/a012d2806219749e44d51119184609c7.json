{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\Frontend_React_Application\\\\src\\\\components\\\\Table.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport Paper from '@mui/material/Paper';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport '../App.css';\nimport { TableColumns } from '../data/TableColumns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StickyHeadTable = props => {\n  _s();\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (_e, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    id: \"paperTable\",\n    sx: {\n      backgroundColor: '#add19e'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        stickyHeader: true,\n        \"aria-label\": \"sticky table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [TableColumns.filter(c => c.id != 'lon' && c.id != 'lat').map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n              align: column.align,\n              style: {\n                minWidth: column.minWidth,\n                backgroundColor: '#80c264',\n                fontWeight: 'bolder',\n                fontSize: '17px'\n              },\n              children: column.label\n            }, column.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 33\n            }, this)), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              style: {\n                backgroundColor: '#80c264'\n              }\n            }, 'button', false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: props.data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              hover: true,\n              role: \"checkbox\",\n              tabIndex: -1,\n              children: [TableColumns.filter(c => c.id != 'lon' && c.id != 'lat').map(column => {\n                const value = row[column.id];\n                return /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: column.align,\n                  style: {\n                    fontWeight: column.font,\n                    fontSize: column.size,\n                    overflow: 'hidden',\n                    whiteSpace: 'nowrap'\n                  },\n                  children: value == null ? '/' : value\n                }, column.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 49\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(TableCell, {\n                style: {\n                  color: 'white',\n                  height: '5px'\n                },\n                className: \"goButton\",\n                onClick: () => props.handleMapItButtonClick(row['name'], [row['lat'], row['lon']]),\n                children: \"MapIt\"\n              }, 'go', false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 41\n              }, this)]\n            }, row.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n      style: {\n        marginTop: '5vh',\n        fontSize: '20px'\n      },\n      rowsPerPageOptions: [10, 25, 100],\n      component: \"div\",\n      count: props.data.length,\n      rowsPerPage: rowsPerPage,\n      page: page,\n      onPageChange: handleChangePage,\n      onRowsPerPageChange: handleChangeRowsPerPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(StickyHeadTable, \"65nbIEELuFY2eeUXbED/8VsHrEQ=\");\n\n_c = StickyHeadTable;\nexport default StickyHeadTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"StickyHeadTable\");","map":{"version":3,"sources":["C:/Users/Dell/Desktop/Frontend_React_Application/src/components/Table.js"],"names":["React","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","TableColumns","StickyHeadTable","props","page","setPage","useState","rowsPerPage","setRowsPerPage","handleChangePage","_e","newPage","handleChangeRowsPerPage","event","target","value","backgroundColor","filter","c","id","map","column","align","minWidth","fontWeight","fontSize","label","data","slice","row","font","size","overflow","whiteSpace","color","height","handleMapItButtonClick","marginTop","length"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport Paper from '@mui/material/Paper';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport '../App.css'\r\nimport { TableColumns } from '../data/TableColumns';\r\n\r\nconst StickyHeadTable = (props) => {\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n    const handleChangePage = (_e, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n\r\n    return (\r\n        <Paper id='paperTable' sx={{ backgroundColor: '#add19e' }}>\r\n            <TableContainer>\r\n                <Table stickyHeader aria-label=\"sticky table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            {TableColumns.filter(c => c.id != 'lon' && c.id != 'lat').map((column) => (\r\n                                <TableCell\r\n                                    key={column.id} align={column.align}\r\n                                    style={{ minWidth: column.minWidth, backgroundColor: '#80c264', fontWeight: 'bolder', fontSize: '17px' }}>\r\n                                    {column.label}\r\n                                </TableCell>\r\n                            ))}\r\n                            <TableCell\r\n                                key={'button'} align='center' style={{backgroundColor:'#80c264'}}>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {props.data\r\n                            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                            .map((row) => {\r\n                                return (\r\n                                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id} >\r\n                                        {TableColumns.filter(c => c.id != 'lon' && c.id != 'lat').map((column) => {\r\n                                            const value = row[column.id];\r\n                                            return (\r\n                                                <TableCell key={column.id} align={column.align}\r\n                                                    style={{ fontWeight: column.font, fontSize: column.size, overflow: 'hidden', whiteSpace: 'nowrap' }}>\r\n                                                    {value == null ? '/' : value}\r\n                                                </TableCell>\r\n                                            );\r\n                                        })}\r\n                                        <TableCell style={{ color: 'white', height: '5px' }} className=\"goButton\" key={'go'}\r\n                                            onClick={() => props.handleMapItButtonClick(row['name'], [row['lat'], row['lon']])}>\r\n                                            MapIt\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                );\r\n                            })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            <TablePagination style={{ marginTop: '5vh', fontSize: '20px' }}\r\n                rowsPerPageOptions={[10, 25, 100]}\r\n                component=\"div\"\r\n                count={props.data.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onPageChange={handleChangePage}\r\n                onRowsPerPageChange={handleChangeRowsPerPage} />\r\n        </Paper>\r\n    );\r\n}\r\nexport default StickyHeadTable"]},"metadata":{},"sourceType":"module"}