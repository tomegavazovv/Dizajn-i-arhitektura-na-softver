{"ast":null,"code":"import { createPathComponent } from '@react-leaflet/core';\nimport { GeoJSON as LeafletGeoJSON } from 'leaflet';\nexport const GeoJSON = createPathComponent(function createGeoJSON(_ref, ctx) {\n  let {\n    data,\n    ...options\n  } = _ref;\n  const instance = new LeafletGeoJSON(data, options);\n  return {\n    instance,\n    context: { ...ctx,\n      overlayContainer: instance\n    }\n  };\n}, function updateGeoJSON(layer, props, prevProps) {\n  if (props.style !== prevProps.style) {\n    if (props.style == null) {\n      layer.resetStyle();\n    } else {\n      layer.setStyle(props.style);\n    }\n  }\n});","map":{"version":3,"sources":["C:/Users/Dell/Desktop/Frontend_React_Application/node_modules/react-leaflet/esm/GeoJSON.js"],"names":["createPathComponent","GeoJSON","LeafletGeoJSON","createGeoJSON","ctx","data","options","instance","context","overlayContainer","updateGeoJSON","layer","props","prevProps","style","resetStyle","setStyle"],"mappings":"AAAA,SAASA,mBAAT,QAAoC,qBAApC;AACA,SAASC,OAAO,IAAIC,cAApB,QAA0C,SAA1C;AACA,OAAO,MAAMD,OAAO,GAAGD,mBAAmB,CAAC,SAASG,aAAT,OAGxCC,GAHwC,EAGnC;AAAA,MAH0D;AAChEC,IAAAA,IADgE;AAEhE,OAAGC;AAF6D,GAG1D;AACN,QAAMC,QAAQ,GAAG,IAAIL,cAAJ,CAAmBG,IAAnB,EAAyBC,OAAzB,CAAjB;AACA,SAAO;AACLC,IAAAA,QADK;AAELC,IAAAA,OAAO,EAAE,EAAE,GAAGJ,GAAL;AACPK,MAAAA,gBAAgB,EAAEF;AADX;AAFJ,GAAP;AAMD,CAXyC,EAWvC,SAASG,aAAT,CAAuBC,KAAvB,EAA8BC,KAA9B,EAAqCC,SAArC,EAAgD;AACjD,MAAID,KAAK,CAACE,KAAN,KAAgBD,SAAS,CAACC,KAA9B,EAAqC;AACnC,QAAIF,KAAK,CAACE,KAAN,IAAe,IAAnB,EAAyB;AACvBH,MAAAA,KAAK,CAACI,UAAN;AACD,KAFD,MAEO;AACLJ,MAAAA,KAAK,CAACK,QAAN,CAAeJ,KAAK,CAACE,KAArB;AACD;AACF;AACF,CAnByC,CAAnC","sourcesContent":["import { createPathComponent } from '@react-leaflet/core';\nimport { GeoJSON as LeafletGeoJSON } from 'leaflet';\nexport const GeoJSON = createPathComponent(function createGeoJSON({\n  data,\n  ...options\n}, ctx) {\n  const instance = new LeafletGeoJSON(data, options);\n  return {\n    instance,\n    context: { ...ctx,\n      overlayContainer: instance\n    }\n  };\n}, function updateGeoJSON(layer, props, prevProps) {\n  if (props.style !== prevProps.style) {\n    if (props.style == null) {\n      layer.resetStyle();\n    } else {\n      layer.setStyle(props.style);\n    }\n  }\n});"]},"metadata":{},"sourceType":"module"}