{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\Frontend_React_Application\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Map from './components/Map';\nimport './App.css';\nimport Table from './components/Table';\nimport { FilterByName } from './filters/FilterByName';\nimport { MainFilter } from './filters/MainFilter';\nimport NavBar from './components/NavBar';\nimport CityFilter from './components/CityFilter';\nimport TypeFilter from './components/TypeFilter';\nimport TerraceFilter from './components/TerraceFilter';\nimport SmokingFilter from './components/SmokingFilter';\nimport { cityData } from './data/FetchCityData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeSearchName = newSearchName => {\n      this.setState({ ...this.state,\n        searchName: newSearchName\n      });\n    };\n\n    this.handleGoButtonClick = (name, loc) => {\n      var obj = FilterByName(name, this.state.appData)[0];\n      if (name != undefined) this.setState({ ...this.state,\n        location: loc,\n        mapViewButtonClicked: true,\n        showObject: obj\n      });\n    };\n\n    this.handleTypeFilter = e => {\n      this.setState({ ...this.state,\n        type: e.target.value\n      });\n    };\n\n    this.handleTerraceFilter = e => {\n      this.setState({ ...this.state,\n        terrace: e.target.value\n      });\n    };\n\n    this.handleSmokingFilter = e => {\n      this.setState({ ...this.state,\n        smoking: e.target.value\n      });\n    };\n\n    this.handleViewButtonClick = e => {\n      e.preventDefault();\n      if (this.checkViewmapViewButtonClicked) this.setState({ ...this.state,\n        mapViewButtonClicked: this.state.mapViewButtonClicked ? false : true\n      });\n    };\n\n    this.handleCityFilter = e => {\n      cityData(e.target.value).then(res => {\n        var loc = this.state.locationSet == true ? [] : res[0];\n        this.setState({ ...this.state,\n          appData: res,\n          cityLoc: [loc[0], loc[1]]\n        });\n      });\n    };\n\n    this.checkViewmapViewButtonClicked = e => {\n      return e.target.text == 'Map View' && this.state.mapViewButtonClicked != true || e.target.text == 'Table View' && this.state.mapViewButtonClicked == true;\n    };\n\n    this.filterData = toFilter => {\n      return MainFilter(this.state.smoking, this.state.type, this.state.terrace, this.state.searchName, toFilter);\n    };\n\n    this.state = {\n      searchName: \"\",\n      mapViewButtonClicked: true,\n      appData: [],\n      showObject: {}\n    };\n  } // Handlers\n\n\n  render() {\n    var flyTo = { ...(this.state.location == undefined ? [] : this.state.location)\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {\n        clickHandler: this.handleViewButtonClick,\n        forMap: this.state.mapViewButtonClicked\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CityFilter, {\n        changeHandler: this.handleCityFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TypeFilter, {\n        changeHandler: this.handleTypeFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TerraceFilter, {\n        changeHandler: this.handleTerraceFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SmokingFilter, {\n        changeHandler: this.handleSmokingFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), this.state.mapViewButtonClicked ? /*#__PURE__*/_jsxDEV(Map, {\n        showObject: this.state.showObject,\n        flyTo: flyTo,\n        callback: this.changeSearchName,\n        data: this.filterData(this.state.appData)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Table, {\n        handleMapItButtonClick: this.handleGoButtonClick,\n        data: this.filterData(this.state.appData)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Dell/Desktop/Frontend_React_Application/src/App.js"],"names":["React","Component","Map","Table","FilterByName","MainFilter","NavBar","CityFilter","TypeFilter","TerraceFilter","SmokingFilter","cityData","App","constructor","props","changeSearchName","newSearchName","setState","state","searchName","handleGoButtonClick","name","loc","obj","appData","undefined","location","mapViewButtonClicked","showObject","handleTypeFilter","e","type","target","value","handleTerraceFilter","terrace","handleSmokingFilter","smoking","handleViewButtonClick","preventDefault","checkViewmapViewButtonClicked","handleCityFilter","then","res","locationSet","cityLoc","text","filterData","toFilter","render","flyTo"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport Map from './components/Map'\r\nimport './App.css'\r\nimport Table from './components/Table'\r\nimport { FilterByName } from './filters/FilterByName'\r\nimport { MainFilter } from './filters/MainFilter'\r\nimport NavBar from './components/NavBar'\r\nimport CityFilter from './components/CityFilter'\r\nimport TypeFilter from './components/TypeFilter'\r\nimport TerraceFilter from './components/TerraceFilter'\r\nimport SmokingFilter from './components/SmokingFilter'\r\nimport { cityData } from './data/FetchCityData'\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchName: \"\",\r\n      mapViewButtonClicked: true,\r\n      appData: [],\r\n      showObject: {},\r\n    }\r\n  }\r\n\r\n  // Handlers\r\n  changeSearchName = (newSearchName) => {\r\n    this.setState({\r\n      ...this.state, \r\n      searchName: newSearchName\r\n    })\r\n  }\r\n\r\n  handleGoButtonClick = (name, loc) => {\r\n    var obj = FilterByName(name, this.state.appData)[0]\r\n    if (name != undefined)\r\n      this.setState({\r\n        ...this.state,\r\n        location: loc,\r\n        mapViewButtonClicked: true,\r\n        showObject:obj\r\n      })\r\n  }\r\n\r\n  handleTypeFilter = (e) => {\r\n    this.setState({\r\n      ...this.state,\r\n      type: e.target.value\r\n    })\r\n  }\r\n\r\n  handleTerraceFilter = (e) => {\r\n    this.setState({\r\n      ...this.state,\r\n      terrace: e.target.value\r\n    })\r\n  }\r\n\r\n  handleSmokingFilter = (e) => {\r\n    this.setState({\r\n      ...this.state,\r\n      smoking: e.target.value\r\n    })\r\n  }\r\n\r\n  handleViewButtonClick = (e) => {\r\n    e.preventDefault();\r\n    if (this.checkViewmapViewButtonClicked)\r\n      this.setState({\r\n        ...this.state,\r\n        mapViewButtonClicked: this.state.mapViewButtonClicked ? false : true,\r\n      })\r\n  }\r\n\r\n  handleCityFilter = (e) => {\r\n    cityData(e.target.value)\r\n      .then(res => {\r\n        var loc = this.state.locationSet==true ? [] : res[0]\r\n        this.setState({\r\n          ...this.state,\r\n          appData:res,\r\n          cityLoc: [loc[0], loc[1]],\r\n        })\r\n      })\r\n  }\r\n\r\n  checkViewmapViewButtonClicked = (e) => {\r\n    return e.target.text == 'Map View' && this.state.mapViewButtonClicked != true\r\n      || e.target.text == 'Table View' && this.state.mapViewButtonClicked == true\r\n  }\r\n\r\n  filterData = (toFilter) => {\r\n    return MainFilter(this.state.smoking, this.state.type, this.state.terrace, this.state.searchName, toFilter)\r\n  }\r\n\r\n  render() {\r\n    var flyTo = { ...this.state.location == undefined ? [] : this.state.location }\r\n    return (\r\n      <div id='container'>\r\n        <NavBar clickHandler={this.handleViewButtonClick} forMap={this.state.mapViewButtonClicked} />\r\n        <CityFilter changeHandler={this.handleCityFilter} />\r\n        <TypeFilter changeHandler={this.handleTypeFilter} />\r\n        <TerraceFilter changeHandler={this.handleTerraceFilter} />\r\n        <SmokingFilter changeHandler={this.handleSmokingFilter} />\r\n        {this.state.mapViewButtonClicked ?\r\n          <Map showObject={this.state.showObject} flyTo={flyTo} callback={this.changeSearchName} data={this.filterData(this.state.appData)} /> :\r\n          <Table handleMapItButtonClick={this.handleGoButtonClick} data={this.filterData(this.state.appData)} />}\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default App;"]},"metadata":{},"sourceType":"module"}