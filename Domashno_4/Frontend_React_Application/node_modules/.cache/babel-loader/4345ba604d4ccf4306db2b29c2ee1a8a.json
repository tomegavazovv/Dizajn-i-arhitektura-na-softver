{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\Frontend_React_Application\\\\src\\\\components\\\\Map.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { MapContainer, TileLayer, Marker, Tooltip } from 'react-leaflet';\nimport { FoodIcon } from '../Icons/FoodIcon';\nimport { DrinkIcon } from '../Icons/DrinkIcon';\nimport { ClientIcon } from '../Icons/ClientLocationIcon';\nimport 'leaflet/dist/leaflet.css';\nimport useGeoLocation from './useGeoLocation';\nimport { TableColumns } from '../data/TableColumns';\nimport Routing from './RouteMachine';\nimport '../App.css';\nimport SideBar from './SideBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Map = props => {\n  _s();\n\n  // State \n  const [object, setObject] = useState({});\n  const [routingButton, setRoutingButton] = useState(false);\n  const [map, setMap] = useState({\n    instance: '',\n    isInit: false\n  });\n  const searchNameRef = React.useRef();\n  const location = useGeoLocation();\n  React.useEffect(() => {\n    setObject(props.showObject);\n  }, []); // Handlers\n\n  function handleMarkerClick(_e, o) {\n    const newObj = o;\n    setObject(newObj);\n    setRoutingButton(false);\n  }\n\n  function handleSearchNameSubmit(e) {\n    e.preventDefault();\n    props.callback(searchNameRef.current.value);\n  }\n\n  const handleLocateMeClick = () => {\n    if (location.loaded && !location.error) {\n      map['instance'].flyTo([location.coordinates.lat, location.coordinates.lng]);\n    } else {\n      alert(location.error.message);\n    }\n  };\n\n  const showLoc = loc => {\n    if (props.flyTo != '' && map.isInit) {\n      map.instance.setZoom(35);\n      map.instance.flyTo(loc);\n    }\n  };\n\n  const handleClearButtonClick = () => {\n    setRoutingButton(false);\n    setObject({\n      name: ''\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sideBarContainer\",\n      children: /*#__PURE__*/_jsxDEV(SideBar, {\n        ref: searchNameRef,\n        handleShowRouteClick: () => setRoutingButton(true),\n        handleSearchNameSubmit: handleSearchNameSubmit,\n        handleLocateMeClick: handleLocateMeClick,\n        callback: props.callback,\n        columns: TableColumns,\n        object: object,\n        handleClearButtonClick: handleClearButtonClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(MapContainer, {\n        whenCreated: m => setMap({\n          instance: m,\n          isInit: true\n        }),\n        center: [41.6086, 21.7453],\n        zoom: 9.4,\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          tileSize: 256,\n          attribution: \"copy <a href=\\\"https://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), map.isInit && props.data.filter(o => o['lat'] != '').map(o => /*#__PURE__*/_jsxDEV(Marker, {\n          eventHandlers: {\n            click: e => {\n              handleMarkerClick(e, o);\n            }\n          },\n          icon: ['restaurant', 'fast_food', 'pub'].includes(o['amenity']) ? FoodIcon : DrinkIcon,\n          position: [o['lat'], o['lon']],\n          children: /*#__PURE__*/_jsxDEV(Tooltip, {\n            style: {\n              width: '200px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: o['name']\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              style: {\n                color: 'red'\n              },\n              children: o['amenity'].charAt(0).toUpperCase() + o['amenity'].slice(1)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this)\n        }, `marker-${o['id']}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(Marker, {\n          icon: ClientIcon,\n          position: [location.coordinates.lat, location.coordinates.lng],\n          children: /*#__PURE__*/_jsxDEV(Tooltip, {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"You are here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 34\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)\n        }, 'myloc', false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), map.isInit && routingButton && /*#__PURE__*/_jsxDEV(Routing, {\n          map: map,\n          src: [location.coordinates.lat, location.coordinates.lng],\n          dst: [object['lat'], object['lon']]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), Object.keys(props.flyTo).length == 0 ? '' : map.isInit ? showLoc([props.flyTo[0], props.flyTo[1]]) : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Map, \"o+hsLkPEsqLVwnHxS+RAzwC3tcU=\", false, function () {\n  return [useGeoLocation];\n});\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["C:/Users/Dell/Desktop/Frontend_React_Application/src/components/Map.js"],"names":["React","useState","MapContainer","TileLayer","Marker","Tooltip","FoodIcon","DrinkIcon","ClientIcon","useGeoLocation","TableColumns","Routing","SideBar","Map","props","object","setObject","routingButton","setRoutingButton","map","setMap","instance","isInit","searchNameRef","useRef","location","useEffect","showObject","handleMarkerClick","_e","o","newObj","handleSearchNameSubmit","e","preventDefault","callback","current","value","handleLocateMeClick","loaded","error","flyTo","coordinates","lat","lng","alert","message","showLoc","loc","setZoom","handleClearButtonClick","name","m","data","filter","click","includes","width","color","charAt","toUpperCase","slice","Object","keys","length"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { MapContainer, TileLayer, Marker, Tooltip } from 'react-leaflet'\r\nimport { FoodIcon } from '../Icons/FoodIcon'\r\nimport { DrinkIcon } from '../Icons/DrinkIcon'\r\nimport { ClientIcon } from '../Icons/ClientLocationIcon'\r\nimport 'leaflet/dist/leaflet.css'\r\nimport useGeoLocation from './useGeoLocation'\r\nimport { TableColumns } from '../data/TableColumns'\r\nimport Routing from './RouteMachine'\r\nimport '../App.css'\r\nimport SideBar from './SideBar'\r\n\r\nconst Map = (props) => {\r\n\r\n    // State \r\n    const [object, setObject] = useState({})\r\n    const [routingButton, setRoutingButton] = useState(false)\r\n    const [map, setMap] = useState({\r\n        instance: '',\r\n        isInit: false\r\n    })\r\n    const searchNameRef = React.useRef();\r\n    const location = useGeoLocation();\r\n\r\n    React.useEffect(() => {\r\n        setObject(props.showObject)\r\n    },[])\r\n\r\n    // Handlers\r\n    function handleMarkerClick(_e, o) {\r\n        const newObj = o;\r\n        setObject(newObj);\r\n        setRoutingButton(false)\r\n    }\r\n\r\n    function handleSearchNameSubmit(e) {\r\n        e.preventDefault();\r\n        props.callback(searchNameRef.current.value)\r\n    }\r\n\r\n    const handleLocateMeClick = () => {\r\n        if (location.loaded && !location.error) {\r\n            map['instance'].flyTo([location.coordinates.lat, location.coordinates.lng])\r\n        } else {\r\n            alert(location.error.message)\r\n        }\r\n    }\r\n\r\n    const showLoc = (loc) => {\r\n        if (props.flyTo != '' && map.isInit) {\r\n            map.instance.setZoom(35)\r\n            map.instance.flyTo(loc)\r\n        }\r\n    }\r\n\r\n\r\n    const handleClearButtonClick = () => {\r\n        setRoutingButton(false)\r\n        setObject({name : ''})\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className='sideBarContainer'>\r\n                <SideBar ref={searchNameRef} handleShowRouteClick={() => setRoutingButton(true)} \r\n                handleSearchNameSubmit={handleSearchNameSubmit} handleLocateMeClick={handleLocateMeClick} \r\n                callback={props.callback} columns={TableColumns} object={object} handleClearButtonClick={handleClearButtonClick}/>\r\n            </div>\r\n            <div>\r\n                <MapContainer whenCreated={m => setMap({ instance: m, isInit: true })} center={[41.6086, 21.7453]} zoom={9.4}>\r\n                    <TileLayer tileSize={256} attribution='copy <a href=\"https://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n\r\n                    {/* Map each node to Marker */}\r\n                    {map.isInit && props.data.filter(o => o['lat'] != '').map((o) =>\r\n                        <Marker\r\n                            eventHandlers={{ click: (e) => { handleMarkerClick(e, o) } }}\r\n                            icon={['restaurant', 'fast_food', 'pub'].includes(o['amenity']) ? FoodIcon : DrinkIcon}\r\n                            key={`marker-${o['id']}`} position={[o['lat'], o['lon']]}>\r\n\r\n                            <Tooltip style={{ width: '200px' }}>\r\n                                <h3>{o['name']}</h3>\r\n                                <h4 style={{ color: 'red' }}>{o['amenity'].charAt(0).toUpperCase() + o['amenity'].slice(1)}</h4>\r\n                            </Tooltip>\r\n                        </Marker>\r\n                    )}\r\n                    <Marker key='myloc' icon={ClientIcon} position={[location.coordinates.lat, location.coordinates.lng]}>\r\n                        <Tooltip><h3>You are here</h3></Tooltip>\r\n                    </Marker>\r\n                    {/* Only if map is initiated initiate routing*/}\r\n                    {map.isInit && routingButton &&\r\n                        <Routing map={map} src={[location.coordinates.lat, location.coordinates.lng]} dst={[object['lat'], object['lon']]} />}\r\n                </MapContainer>\r\n                {/* Fly to location if clicked MapIt button from Table View */}\r\n                {Object.keys(props.flyTo).length == 0 ? '' : map.isInit ? showLoc([props.flyTo[0], props.flyTo[1]]) : ''}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Map"]},"metadata":{},"sourceType":"module"}